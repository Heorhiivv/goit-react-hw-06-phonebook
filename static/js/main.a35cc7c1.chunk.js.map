{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactListItem/ContactItem.module.css","shared/Title/Title.module.css","shared/Notify/Notification.module.css","components/ContactsList/ContactsList.module.css","shared/Title/Title.jsx","shared/Notify/Notification.jsx","redux/actions/contactsAct.js","components/ContactForm/ContactForm.jsx","redux/actions/filterAct.js","components/Filter/Filter.jsx","components/ContactsList/ContactListItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/App/App.jsx","redux/reducers/contactsReducer.js","redux/reducers/filterReducer.js","redux/store.js","index.js","components/ContactForm/ContactFrom.module.css"],"names":["module","exports","Title","CSSTransition","in","appear","timeout","classNames","css","unmountOnExit","className","title","Notification","isContacts","notification","onAddContact","createAction","removeContact","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","task","id","uuid","props","contacts","find","setTimeout","this","PhoneBookForm","onSubmit","label","input","type","onChange","required","inputBtn","Component","mapDispatchToProps","contactsAct","connect","filterContacts","onChangeFilter","filter","length","ownProps","item","dispatch","itemText","btn","onClick","findContacts","toLowerCase","includes","TransitionGroup","component","list","map","App","ORIGINAL_STATE","JSON","parse","localStorage","getItem","contactsReducer","createReducer","actions","action","newContact","payload","setItem","stringify","updatedContacts","filterReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a35cc7c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3hyyH\",\"input\":\"Filter_input__3sW61\",\"label\":\"Filter_label__2n4ei\",\"enter\":\"Filter_enter__1sy24\",\"enterActive\":\"Filter_enterActive__2IswE\",\"exit\":\"Filter_exit__1g12D\",\"exitActive\":\"Filter_exitActive__eQ_jw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1K5t5\",\"itemText\":\"ContactItem_itemText__1h2Cz\",\"btn\":\"ContactItem_btn__3BET6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2KyJt\",\"appear\":\"Title_appear__M0X5M\",\"appearActive\":\"Title_appearActive__3SUDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3uYzt\",\"enter\":\"Notification_enter__3Pgy-\",\"enterActive\":\"Notification_enterActive__1ITNf\",\"exit\":\"Notification_exit__1y9-G\",\"exitActive\":\"Notification_exitActive__KJlwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2F8i5\",\"enter\":\"ContactsList_enter__3Wovw\",\"enterActive\":\"ContactsList_enterActive__YShNG\",\"exit\":\"ContactsList_exit__2g8Uu\",\"exitActive\":\"ContactsList_exitActive__1BIo7\"};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport css from './Title.module.css';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <CSSTransition \r\n    in={true} \r\n    appear={true} \r\n    timeout={500} \r\n    classNames={css}\r\n    unmountOnExit>\r\n    <h1 className={css.title}>Phonebook</h1>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport css from './Notification.module.css';\r\n\r\nconst Notification = ({isContacts}) => {\r\n  return (\r\n    <CSSTransition\r\n    in={isContacts}\r\n    appear={true}\r\n    timeout={250}\r\n    classNames={css}\r\n    unmountOnExit \r\n    >\r\n      <div className={css.notification}>\r\n      <p>Contact already exists!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\nexport default Notification;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst onAddContact = createAction('ADD_CONTACT');\r\nconst removeContact = createAction('REMOVE_CONTACT');\r\n\r\nexport default { onAddContact, removeContact };","import React, {Component} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {v4 as uuid} from \"uuid\"\r\nimport Notification from \"../../shared/Notify/Notification\"\r\nimport css from \"../ContactForm/ContactFrom.module.css\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport contactsAct from \"../../redux/actions/contactsAct\"\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  }\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    isContacts: false,\r\n  }\r\n\r\n  handleChange = ({target}) => {\r\n    const {name, value} = target\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const task = {\r\n      id: uuid(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n\r\n    if (this.props.contacts.find(({name}) => name === task.name)) {\r\n      this.setState({isContacts: true})\r\n      setTimeout(() => this.setState({isContacts: false}), 4000)\r\n      return\r\n    }\r\n\r\n    this.props.onAddContact(task)\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {name, number, isContacts} = this.state\r\n    return (\r\n      <>\r\n        <Notification isContacts={isContacts} />\r\n        <form className={css.PhoneBookForm} onSubmit={this.handleSubmit}>\r\n          <label className={css.label}>\r\n            Name\r\n            <input className={css.input} name=\"name\" type=\"text\" value={name} onChange={this.handleChange} required />\r\n          </label>\r\n\r\n          <label className={css.label}>\r\n            Number\r\n            <input\r\n              className={css.input}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <input type=\"submit\" value=\"Add contact\" className={css.inputBtn} />\r\n        </form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsAct.onAddContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport default filterContacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport css from './Filter.module.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport filterContacts from '../../redux/actions/filterAct';\r\n\r\n\r\nconst Filter = ({filter, onChangeFilter, contacts}) => {\r\n  return (\r\n   <CSSTransition\r\n   in={contacts.length > 0}\r\n   appear={true}\r\n   timeout={250}\r\n   classNames={css}\r\n   unmountOnExit\r\n   >\r\n      <div className={css.filter}>\r\n    <label className={css.label}>\r\n    Find contacts by name\r\n    <input \r\n    type=\"text\" \r\n    className={css.input} \r\n    value={filter}\r\n    onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n    </label>\r\n    </div>\r\n   </CSSTransition>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.filter,\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: filterContacts,\r\n};\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ])\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from '../ContactListItem/ContactItem.module.css'\r\n\r\nimport contactsAct from '../../../redux/actions/contactsAct';\r\nimport {connect} from 'react-redux';\r\n\r\nconst ContactItem = ({name, number, removeContact}) => {\r\n return (\r\n  <li className={css.item}>\r\n  <p className={css.itemText}>{name}:</p>\r\n  <p className={css.itemText}>{number}</p>\r\n    <button \r\n    type=\"button\"\r\n    className={css.btn} \r\n    onClick={removeContact}>\r\n      Delete\r\n    </button>\r\n</li>\r\n );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.find(item => item.id === ownProps.id);\r\n  return {\r\n    ...item,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  removeContact: () => dispatch(contactsAct.removeContact(ownProps.id)),\r\n});\r\n\r\nContactItem.propTypes = {\r\n  removeContact: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport ContactItem from \"./ContactListItem/ContactItem\"\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\r\nimport css from \"../ContactsList/ContactsList.module.css\"\r\n\r\nimport {connect} from \"react-redux\"\r\n\r\nconst ContactsList = ({findContacts}) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={css.list}>\r\n      {findContacts.map(({id}) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={css}>\r\n            <ContactItem id={id} />\r\n          </CSSTransition>\r\n        )\r\n      })}\r\n    </TransitionGroup>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  const {contacts, filter} = state;\r\n  const filteredContacts = contacts.filter((task) => \r\n  task.name.toLowerCase().includes(filter.toLowerCase()))\r\n  return {\r\n    findContacts: filteredContacts,\r\n  }\r\n}\r\nContactsList.propTypes = {\r\n  findContacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  id: PropTypes.string,\r\n}\r\nexport default connect(mapStateToProps)(ContactsList)\r\n","import React from 'react';\r\nimport Title from '../../shared/Title/Title';\r\nimport ContactForm from \"../ContactForm/ContactForm\"\r\nimport Filter from \"../Filter/Filter\"\r\nimport ContactsList from \"../ContactsList/ContactsList\"\r\nimport \"./App.css\";\r\n\r\n// import {CSSTransition} from 'react-transition-group';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n          {/* <CSSTransition in={true} appear={true} timeout={500} classNames=\"Logo-slideIn\" unmountOnExit>\r\n          <h1 className=\"title\">Phonebook</h1>\r\n        </CSSTransition> */}\r\n      <Title />\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import { createReducer } from '@reduxjs/toolkit';\r\nimport actions from '../actions/contactsAct';\r\n\r\nconst ORIGINAL_STATE = JSON.parse(localStorage.getItem('contacts')) || \r\n[\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst onAddContact = (state, action) => {\r\n  const newContact = [...state, action.payload];\r\n  localStorage.setItem('contacts', JSON.stringify(newContact));\r\n  return newContact;\r\n};\r\n\r\nconst removeContact = (state, action) => {\r\n  const updatedContacts = state.filter(\r\n    task => task.id !== action.payload,\r\n  );\r\n  localStorage.setItem('contacts', JSON.stringify(updatedContacts));\r\n  return updatedContacts;\r\n};\r\n\r\nconst contactsReducer = createReducer(ORIGINAL_STATE, {\r\n  [actions.onAddContact]: onAddContact,\r\n  [actions.removeContact]: removeContact,\r\n});\r\n\r\nexport default contactsReducer;","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterContacts from '../actions/filterAct';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nexport default filterReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport contacts from './reducers/contactsReducer';\r\nimport filter from './reducers/filterReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts,\r\n    filter,\r\n  },\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhoneBookForm\":\"ContactFrom_PhoneBookForm__3p7MD\",\"input\":\"ContactFrom_input__38lo2\",\"label\":\"ContactFrom_label__1U1bM\",\"inputBtn\":\"ContactFrom_inputBtn__1pU2a\"};"],"sourceRoot":""}